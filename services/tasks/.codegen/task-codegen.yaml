openapi: 3.0.0
info:
  title: Task Service API
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
paths:
  /api/v1/tasks:
    get:
      tags:
        - Task
      summary: List tasks
      parameters:
        - in: query
          name: id
          schema:
            type: string
            format: uuid
        - in: query
          name: createdBy
          schema:
            type: string
            format: uuid
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: startedAtLB
          schema:
            type: string
            format: date-time
        - in: query
          name: startedAtRB
          schema:
            type: string
            format: date-time
        - in: query
          name: endedAtLB
          schema:
            type: string
            format: date-time
        - in: query
          name: endedAtRB
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskGet'
    post:
      tags:
        - Task
      summary: Create a task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelUUID'
    put:
      tags:
        - Task
      summary: Update a task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
      responses:
        '200':
          description: Successful operation
    patch:
      tags:
        - Task
      summary: Change task status
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
            format: uuid
        - in: query
          name: status
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation

  /api/v1/accounts:
    get:
      tags:
        - Accounts
      summary: List Accounts
      parameters:
        - in: query
          name: id
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountGet'
    post:
      tags:
        - Accounts
      summary: Create an Accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreate'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelUUID'
    put:
      tags:
        - Accounts
      summary: Update account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdate'
      responses:
        '200':
          description: Successful operation

  /api/v1/auth:
    post:
      tags:
        - Auth
      summary: Login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountAuth'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JwtToken'

components:
  schemas:
    TaskGet:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        text:
          type: string
        status:
          type: string
        createdBy:
          type: string
          format: uuid
        startedAt:
          type: string
          format: date-time
        endedAt:
          type: string
          format: date-time
        CreatedAt:
          type: string
          format: date-time
        UpdateAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - text
        - status
        - createdBy
        - startedAt
        - endedAt
        - CreatedAt
        - UpdateAt

    TaskCreate:
      type: object
      properties:
        name:
          type: string
        text:
          type: string
        createdBy:
          type: string
          format: uuid
        startedAt:
          type: string
          format: date-time
        endedAt:
          type: string
          format: date-time
      required:
        - name
        - text
        - createdBy
        - startedAt
        - endedAt

    TaskUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        text:
          type: string
        status:
          type: string
        createdBy:
          type: string
          format: uuid
        startedAt:
          type: string
          format: date-time
        endedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - text
        - status
        - createdBy
        - startedAt
        - endedAt
    
    AccountGet:
      type: object
      properties:
        id:
          type: string
          format: uuid
        login:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - login
        - createdAt
        - updatedAt

    AccountCreate:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      required:
        - login
        - password

    AccountUpdate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        login:
          type: string
        password:
          type: string
      required:
        - id
        - login
        - password

    AccountAuth:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
      required:
        - login
        - password

    ModelUUID:
      type: object
      properties:
        id:
          type: string
          format: uuid
      required:
        - id

    JwtToken:
      type: object
      properties:
        token:
          type: string
      required:
        - id
